digraph model {
    node [ shape="record" ]

    scheme [ label="Scheme", fontcolor="green" ]
    http
    https

    status [ label="Status", fontcolor="green" ]
    ok
    unavailable

    access [ label="Access" ]
    service [ label="Service"]
    instance [ label="Instance" ]

    report [ label="Report", fontcolor="blue" ]
    heartbeat [ label="Heartbeat" ]
    observation [ label="Observation" ]

    heartbeatMeta [ label="Hearbeat Meta", fontcolor="green" ]
    heartbeatCpu [ label="CPU" ]
    heartbeatMemory [ label="Memory" ]

    observationMeta [ label="Observation Meta", fontcolor="green" ]
    observationLatency [ label="Latency" ]

    host [ label="Host" ]

    cloud [ label="Cloud", fontcolor="blue" ]
    datacenter [ label="Datacenter", fontcolor="blue" ]
    rack [ label = "Rack", fontcolor="blue" ]

    aws [ label = "AWS" ]
    region [ label = "AWS Region", fontcolor="green" ]
    az [ label = "AWS AZ" ]

    regions [ label = "{us-west-2|us-east-1|etc}" ]

    local [ label = "Local" ]
    localDatacenter [ label = "Local Datacenter" ]
    localRack [ label="Local Rack" ]

    subgraph isA {
        edge [arrowhead="normal"]
        aws -> cloud
        region -> datacenter
        az -> rack

        http -> scheme
        https -> scheme

        regions -> region

        local -> cloud

        {ok, unavailable} -> status

        {heartbeat, observation} -> report

        {heartbeatCpu, heartbeatMemory} -> heartbeatMeta
        {observationLatency} -> observationMeta

        localDatacenter -> datacenter
        localRack -> rack
    }

    subgraph hasA {
        edge [dir=back,arrowtail=odiamond]

        rack -> datacenter
        host -> rack

        instance -> { service, access }
        report -> { instance, status }
        access -> { scheme, host }

        heartbeat -> heartbeatMeta
        observation -> observationMeta

        localDatacenter -> localRack
    }

    subgraph owns {
        edge [dir=back,arrowtail=diamond]

        aws -> { region, az }
    }

    subgraph legend {
        node [ shape="note" ]
        abstract [ fontcolor="blue" ]
        enum [ fontcolor="green" ]
    }
}